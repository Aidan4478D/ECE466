---------------------------------------------
[in FILE_SCOPE scope starting at <stdin>:1]
<stdin>:1
symbol: f, scope: FILE_SCOPE, namespace = GENERAL, type = FUNCTION, storage = EXTERN
AST Tree for your symbol:
---------------------------------------------
FUNCTION 'f'
	RETURN TYPE: INT
	PARAMETERS:
		PARAMETER #1
			IDENT: a
			TYPE: INT
		PARAMETER #2
			IDENT: b
			TYPE: INT
---------------------------------------------


---------------------------------------------
AST Dump for function f
---------------------------------------------
LIST:
LIST ELEMENT #1:
	FOR
		INIT:
			ASSIGNMENT OP (=)
				IDENT: a
				NUM (numtype=int)	1	SIGNED
		COND:
			COMPARISON OP (<)
				IDENT: a
				IDENT: b
		INCR:
			UNARY OP (++)
				IDENT: a
		BODY:
			LIST:
			LIST ELEMENT #1:
				ASSIGNMENT OP (=)
					IDENT: b
					BINARY OP (-)
						IDENT: b
						IDENT: a


LIST ELEMENT #2:
	RETURN
		IDENT: b

---------------------------------------------
[in FILE_SCOPE scope starting at <stdin>:1]
<stdin>:8
symbol: g, scope: FILE_SCOPE, namespace = GENERAL, type = FUNCTION, storage = EXTERN
AST Tree for your symbol:
---------------------------------------------
FUNCTION 'g'
	RETURN TYPE: VOID
	PARAMETERS:
		PARAMETER #1
			IDENT: f
			TYPE: INT
---------------------------------------------

---------------------------------------------
[in FUNCT_SCOPE scope starting at <stdin>:8]
<stdin>:10
symbol: h, scope: FUNCT_SCOPE, namespace = LABEL, type = LABEL, storage = EXTERN
AST Tree for your symbol:
---------------------------------------------
---------------------------------------------

---------------------------------------------
[in FUNCT_SCOPE scope starting at <stdin>:8]
<stdin>:18
symbol: d, scope: FUNCT_SCOPE, namespace = GENERAL, type = VARIABLE, storage = AUTO
AST Tree for your symbol:
---------------------------------------------
TYPE: DOUBLE
---------------------------------------------


---------------------------------------------
AST Dump for function g
---------------------------------------------
LIST:
LIST ELEMENT #1:
	LABEL (h) defined at <stdin>:10
		STATEMENT:
			SWITCH
				EXPR:
					IDENT: f
					CASE
						EXPRESSION:
							NUM (numtype=int)	1	SIGNED
						STATEMENT:
							FUNCTION CALL
								IDENT: printf
								PARAMETER #1
									STRING Hello
					GOTO l (incomplete) defined at <stdin>:13
					BREAK
					DEFAULT
						STATEMENT:
							FUNCTION CALL
								IDENT: printf
								PARAMETER #1
									STRING No
					BREAK


LIST ELEMENT #2:
	UNARY OP (--)
		IDENT: f

LIST ELEMENT #3:
	DECLARATION
		SPECIFIERS: DOUBLE 
		DECLARATOR #1
			IDENT: d
			TYPE: DOUBLE


LIST ELEMENT #4:
	ASSIGNMENT OP (=)
		IDENT: d
		UNARY OP (-)
			NUM (numtype=double)	10.100000	SIGNED

LIST ELEMENT #5:
	IF
		COND:
			COMPARISON OP (>)
				IDENT: f
				IDENT: d
		THEN:
			GOTO h (complete) defined at <stdin>:10

